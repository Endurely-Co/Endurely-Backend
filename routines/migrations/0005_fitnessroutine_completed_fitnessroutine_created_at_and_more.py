# Generated by Django 4.2.19 on 2025-02-28 14:38

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('routines', '0004_update_preload_excercise'),
    ]

    operations = [
        migrations.AddField(
            model_name='fitnessroutine',
            name='completed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='fitnessroutine',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='fitnessroutine',
            name='routine_duration',
            field=models.DurationField(default=datetime.timedelta),
        ),
        migrations.AddField(
            model_name='fitnessroutine',
            name='routine_reps',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='fitnessroutine',
            name='routine_set',
            field=models.IntegerField(default=0),
        ),
        migrations.CreateModel(
            name='Nutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('nutrient', models.CharField(choices=[('CAL', 'Calories'), ('PRO', 'Protein'), ('CARB', 'Carbohydrates'), ('FAT', 'Total Fat'), ('SFAT', 'Saturated Fat'), ('TFAT', 'Trans Fat'), ('CHOL', 'Cholesterol'), ('SOD', 'Sodium'), ('POT', 'Potassium'), ('FIB', 'Dietary Fiber'), ('SUG', 'Sugars'), ('VITA', 'Vitamin A'), ('VITC', 'Vitamin C'), ('VITD', 'Vitamin D'), ('VITE', 'Vitamin E'), ('VITK', 'Vitamin K'), ('VITB1', 'Thiamine (Vitamin B1)'), ('VITB2', 'Riboflavin (Vitamin B2)'), ('VITB3', 'Niacin (Vitamin B3)'), ('VITB5', 'Pantothenic Acid (Vitamin B5)'), ('VITB6', 'Vitamin B6'), ('VITB7', 'Biotin (Vitamin B7)'), ('VITB9', 'Folate (Vitamin B9)'), ('VITB12', 'Vitamin B12'), ('CALC', 'Calcium'), ('IRON', 'Iron'), ('MAG', 'Magnesium'), ('PHOS', 'Phosphorus'), ('ZINC', 'Zinc'), ('COPP', 'Copper'), ('MANG', 'Manganese'), ('SELE', 'Selenium'), ('IOD', 'Iodine'), ('CHRO', 'Chromium'), ('MOLY', 'Molybdenum'), ('OMEGA3', 'Omega-3 Fatty Acids'), ('OMEGA6', 'Omega-6 Fatty Acids'), ('WATER', 'Water')], default=('CAL', 'Calories'), max_length=50)),
                ('food_name', models.CharField(default='', max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MealRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('recommended_meal', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FitnessRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('height', models.FloatField(default=0)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('P', 'Prefer not to say')], default=('P', 'Prefer not to say'), max_length=20)),
                ('fitness_goal', models.CharField(default='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
